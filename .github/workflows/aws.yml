name: Deploy Application Docker Image to EC2 instance - Run CI/CD

on:
  push:
    branches: [main]

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create ECR repository if it doesn't exist
        run: |
          aws ecr describe-repositories --repository-names hf || aws ecr create-repository --repository-name hf
          echo "ECR repository 'hf' is ready"

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY_NAME: hf
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

  # Deployment job is commented out until EC2 secrets are configured
  # To enable deployment, add the following secrets to your GitHub repository:
  # - EC2_SSH_KEY: Your private SSH key for connecting to the EC2 instance
  # - EC2_HOST: The public IP or hostname of your EC2 instance
  # - EC2_USERNAME: The username for SSH access (usually 'ec2-user' or 'ubuntu')

  # For now, we'll just output the deployment instructions
  Deployment-Instructions:
    needs: Continuous-Integration
    runs-on: ubuntu-latest
    steps:
      - name: Display Manual Deployment Instructions
        run: |
          echo "=== MANUAL DEPLOYMENT INSTRUCTIONS ==="
          echo "Your Docker image has been successfully built and pushed to ECR."
          echo "To deploy it to your EC2 instance, run the following commands on your EC2 instance:"
          echo ""
          echo "1. Configure AWS CLI:"
          echo "   export AWS_ACCESS_KEY_ID=your_access_key"
          echo "   export AWS_SECRET_ACCESS_KEY=your_secret_key"
          echo "   export AWS_DEFAULT_REGION=your_region"
          echo ""
          echo "2. Login to ECR:"
          echo "   aws ecr get-login-password | docker login --username AWS --password-stdin your_account_id.dkr.ecr.your_region.amazonaws.com"
          echo ""
          echo "3. Pull the Docker image:"
          echo "   docker pull your_account_id.dkr.ecr.your_region.amazonaws.com/hf:latest"
          echo ""
          echo "4. Stop and remove any existing container:"
          echo "   docker stop ml-model-app 2>/dev/null || true"
          echo "   docker rm ml-model-app 2>/dev/null || true"
          echo ""
          echo "5. Run the new container:"
          echo "   docker run -d --name ml-model-app \"
          echo "     -e AWS_ACCESS_KEY_ID=your_access_key \"
          echo "     -e AWS_SECRET_ACCESS_KEY=your_secret_key \"
          echo "     -e AWS_DEFAULT_REGION=your_region \"
          echo "     -e MONGODB_URL=your_mongodb_url \"
          echo "     -p 8080:8080 \"
          echo "     your_account_id.dkr.ecr.your_region.amazonaws.com/hf:latest"
          echo ""
          echo "=== END OF INSTRUCTIONS ==="